package com.hrm.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TotalAttendSalaryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTotalAttendSalaryAllPropertiesEquals(TotalAttendSalary expected, TotalAttendSalary actual) {
        assertTotalAttendSalaryAutoGeneratedPropertiesEquals(expected, actual);
        assertTotalAttendSalaryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTotalAttendSalaryAllUpdatablePropertiesEquals(TotalAttendSalary expected, TotalAttendSalary actual) {
        assertTotalAttendSalaryUpdatableFieldsEquals(expected, actual);
        assertTotalAttendSalaryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTotalAttendSalaryAutoGeneratedPropertiesEquals(TotalAttendSalary expected, TotalAttendSalary actual) {
        assertThat(expected)
            .as("Verify TotalAttendSalary auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTotalAttendSalaryUpdatableFieldsEquals(TotalAttendSalary expected, TotalAttendSalary actual) {
        assertThat(expected)
            .as("Verify TotalAttendSalary relevant properties")
            .satisfies(e -> assertThat(e.getTotalAttend()).as("check totalAttend").isEqualTo(actual.getTotalAttend()))
            .satisfies(e -> assertThat(e.getTotalSalary()).as("check totalSalary").isEqualTo(actual.getTotalSalary()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTotalAttendSalaryUpdatableRelationshipsEquals(TotalAttendSalary expected, TotalAttendSalary actual) {
        assertThat(expected)
            .as("Verify TotalAttendSalary relationships")
            .satisfies(e -> assertThat(e.getEmployee()).as("check employee").isEqualTo(actual.getEmployee()));
    }
}
